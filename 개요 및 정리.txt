IOC(Inversion of Control) : 객체를 생성해주고 관리해줌, 여태 개발자들이 했던 것들을 IOC가 한다하여 제어반전이라 한다

DI(Dependency Indection) : IOC가 만들어둔 객체를 피룡한 위치에서 주입한다. 이러하여 의존성 주입이라 한다.

IOC/DI 는 세트로 많이 엮어서 정리, 사실상 세트


POJO(Plain Old Java Object) : 일반적인 자바 객체를 사용할 수 있도록 지원함

AOP(Aspect Orented Programming) : 공통 관심사를 분리하여 코드 중복을 줄이고 유지보수성을 향상시키는 기능을 지원함, 관점 지향 프로그래밍

@Tranjactional - 대표적인 AOP가 적용된 어노테이션


Spring MVC : MVC 디자인 패턴을 적용하는 어노테이션
Model - (Service / DAO / DTO)
View (jsp, html)
Controller ( req, resp을 받아서 처리해줌)
@Controller, @Service, @Repository( == DAO)

PSA(Portable Service Abstraction) : 


Beans : Spring이 만든 객체


ORM : 데이터베이스를 객체화 해서 갖다 쓰는것들을 ORM이라 한다
JPA : ORM중 가장 유명한 것을 JPA라고 한다, 한국에서는 아직 MyBatics를 사용 차근차근 JPA로 바뀌는중

View Resolver : Spring Boot에서는 자동으로 설정 되어있다
경로 - Controller -> 받은 리턴값 -> 뷰 결정
Controller 메서드 여러개 메서드 반환형 -> 응답 페이지 경로
			  String

View Resolver의 자동으로 설정된 접두사, 접미사
접두사 : src/main/resources(classpath라고 한다)/templates/
접미사 : .htnml


progress 작동중에는 아무것도 안 하는 걸 추천


값을 추척하고 오류를 추척하는 과정을 디버그라고 한다


html파일이 모여져 있는 곳이 templates이다
정적 resources : css/js/images
